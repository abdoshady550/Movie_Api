// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie_Api.Data;

#nullable disable

namespace Movie_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250816122953_MoviePosterEdit")]
    partial class MoviePosterEdit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movie_Api.Model.Eintites.Genra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Genras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("Movie_Api.Model.Eintites.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenraId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Poster")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PosterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Storyline")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenraId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenraId = 5,
                            Rate = 8.8000000000000007,
                            Storyline = "A skilled thief is given a chance at redemption if he can successfully perform an inception.",
                            Title = "Inception",
                            Year = 2010
                        },
                        new
                        {
                            Id = 2,
                            GenraId = 4,
                            Rate = 7.5,
                            Storyline = "Paranormal investigators help a family terrorized by a dark presence.",
                            Title = "The Conjuring",
                            Year = 2013
                        },
                        new
                        {
                            Id = 3,
                            GenraId = 6,
                            Rate = 7.7999999999999998,
                            Storyline = "A young couple falls in love on the ill-fated RMS Titanic.",
                            Title = "Titanic",
                            Year = 1997
                        },
                        new
                        {
                            Id = 4,
                            GenraId = 5,
                            Rate = 8.6999999999999993,
                            Storyline = "A computer hacker learns about the true nature of his reality.",
                            Title = "The Matrix",
                            Year = 1999
                        },
                        new
                        {
                            Id = 5,
                            GenraId = 1,
                            Rate = 9.0,
                            Storyline = "Batman faces the Joker, a criminal mastermind spreading chaos in Gotham.",
                            Title = "The Dark Knight",
                            Year = 2008
                        });
                });

            modelBuilder.Entity("Movie_Api.Model.Eintites.Movie", b =>
                {
                    b.HasOne("Movie_Api.Model.Eintites.Genra", "Genra")
                        .WithMany("Movies")
                        .HasForeignKey("GenraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genra");
                });

            modelBuilder.Entity("Movie_Api.Model.Eintites.Genra", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
